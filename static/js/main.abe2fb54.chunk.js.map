{"version":3,"sources":["components/SayHello/assets/github.svg","components/SayHello/assets/linkedin.svg","components/SayHello/assets/email.svg","components/SayHello/assets/phone.svg","components/Header/Header.js","components/Hello/Hello.js","components/SayHello/Contact.js","components/SayHello/constants.js","components/SayHello/SayHello.js","components/Skills/Skill.js","components/Skills/constants.js","components/Skills/Skills.js","components/Experience/Job.js","components/Experience/constants.js","components/Experience/Experience.js","components/Education/constants.js","components/Education/School.js","components/Education/Education.js","components/Experience/Volunteering.js","components/Languages/constants.js","components/Languages/Language.js","components/Languages/Languages.js","components/Interests/constants.js","components/Interests/Interest.js","components/Interests/Interests.js","components/References/References.js","components/Divider/Divider.js","components/PrintDivider/helpers.js","components/PrintDivider/PrintDivider.js","App.js","index.js"],"names":["module","exports","Header","className","displayName","Hello","Contact","icon","link","url","type","isPrivate","href","target","rel","src","alt","contacts","github","linkedin","email","phone","SayHello","showPrivateDetails","filter","contact","map","key","Skill","label","list","item","index","skills","Skills","skill","Job","start_date","end_date","position","company","location","description","achievements","tech_stack","print_margin","length","achievement","jobs","volunteer","Experience","job","education","graduation_year","school","School","Education","Volunteering","languages","level","Language","Languages","language","interests","Interest","Interests","interest","References","Divider","generateHTMLDots","numberOfDots","dots","i","__html","PrintDivider","dangerouslySetInnerHTML","height","width","points","App","useState","isPrintMode","setIsPrintMode","window","onbeforeprint","onafterprint","WebFont","load","google","families","ReactDOM","render","document","getElementById","console","info"],"mappings":"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","file":"static/js/main.abe2fb54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.8220d480.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.e9419679.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.ce49021a.svg\";","// @flow\nimport React from 'react';\nimport './Header.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>\n        <span className=\"secondary\">Cathleen</span> Ghenne\n      </h1>\n      <h2>\n        <span className=\"secondary\">JavaScript</span> Engineer\n      </h2>\n    </header>\n  );\n};\n\nHeader.displayName = 'Header';\n\nexport default Header;\n","// @flow\nimport React from 'react';\nimport './Hello.scss';\n\nconst Hello = () => {\n  return (\n    <div className=\"box hello\">\n      <h3>Hello</h3>\n      <p>\n        I am a dynamic and capable JavaScript engineer with multiple years of\n        experience in development and maintenance of websites. I also have\n        experience hiring, training and mentoring teams. My preferred framework\n        is React and I am currently learning about functional programming.\n      </p>\n    </div>\n  );\n};\n\nHello.displayName = 'Hello';\n\nexport default Hello;\n","// @flow\nimport React from 'react';\nimport './SayHello.scss';\n\ntype Props = {\n  icon: string,\n  link: string,\n  url: string,\n  type: string,\n  isPrivate: boolean\n};\n\nconst Contact = ({ icon, link, url, type, isPrivate }: Props) => {\n  return (\n    <a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={`contact${isPrivate ? ' private' : ''}`}\n    >\n      <img src={icon} alt={type} />\n      <span>{link}</span>\n    </a>\n  );\n};\n\nContact.displayName = 'Contact';\n\nexport default Contact;\n","import github from './assets/github.svg';\nimport linkedin from './assets/linkedin.svg';\nimport email from './assets/email.svg';\nimport phone from './assets/phone.svg';\n\nexport const contacts = [\n  {\n    type: 'github',\n    icon: github,\n    link: '/cghenne',\n    url: 'https://github.com/cghenne',\n    isPrivate: false\n  },\n  {\n    type: 'linkedin',\n    icon: linkedin,\n    link: '/cathleen-ghenne',\n    url: 'https://www.linkedin.com/in/cathleen-ghenne/',\n    isPrivate: false\n  },\n  {\n    type: 'email',\n    icon: email,\n    link: 'cathleen.ghenne@gmail.com',\n    url: 'mailto:cathleen.ghenne@gmail.com',\n    isPrivate: true\n  },\n  {\n    type: 'phone',\n    icon: phone,\n    link: '+1 437 928 2032',\n    url: 'tel:+14379282032',\n    isPrivate: true\n  }\n];\n\nexport type ContactT = {\n  icon: string,\n  link: string,\n  url: string,\n  show: boolean,\n  isPrivate: booleam\n};\n","// @flow\nimport React from 'react';\nimport Contact from './Contact';\nimport { contacts } from './constants';\nimport type { ContactT } from './constants';\nimport './SayHello.scss';\n\ntype Props = {\n  showPrivateDetails: boolean\n};\n\nconst SayHello = ({ showPrivateDetails }: Props) => {\n  return (\n    <div className=\"box say-hello\">\n      <h3>Say Hello</h3>\n      {contacts\n        .filter((contact: ContactT) =>\n          contact.isPrivate ? showPrivateDetails : true\n        )\n        .map((contact: ContactT) => (\n          <Contact {...contact} key={contact.type} />\n        ))}\n    </div>\n  );\n};\n\nSayHello.displayName = 'SayHello';\n\nexport default SayHello;\n","// @flow\nimport React from 'react';\nimport './Skills.scss';\n\ntype Props = {\n  label: string,\n  list: Array<string>\n};\n\nconst Skill = ({ label, list }: Props) => {\n  return (\n    <div className=\"skill\">\n      <h4>{label}</h4>\n      <ul>\n        {list.map((item: string, index: number) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nSkill.displayName = 'Skill';\n\nexport default Skill;\n","export const skills = [\n  {\n    type: 'languages',\n    label: 'Languages',\n    list: ['JavaScript ES6/ES7', 'CSS/SASS', 'HTML']\n  },\n  {\n    type: 'frameworks-libraries',\n    label: 'Frameworks / Libraries',\n    list: [\n      'React',\n      'Redux',\n      'React Native',\n      'Node.js',\n      'Express',\n      'Sequelize',\n      'Jest',\n      'Flow'\n    ]\n  },\n  {\n    type: 'tools',\n    label: 'Tools',\n    list: ['Webpack', 'NPM/Yarn', 'Travis CI', 'CircleCI']\n  },\n  {\n    type: 'databases',\n    label: 'Databases',\n    list: ['PostgreSQL', 'MongoDB', 'MySQL']\n  },\n  {\n    type: 'other',\n    label: 'Other',\n    list: ['Git', 'Jira', 'Agile workflows', 'AWS']\n  }\n];\n\nexport type SkillT = {\n  type: string,\n  label: string,\n  list: Array<string>\n};\n","// @flow\nimport React from 'react';\nimport Skill from './Skill';\nimport { skills } from './constants';\nimport type { SkillT } from './constants';\nimport './Skills.scss';\n\nconst Skills = () => {\n  return (\n    <div className=\"box skills\">\n      <h3>Skills</h3>\n      {skills.map((skill: SkillT) => (\n        <Skill {...skill} key={skill.type} />\n      ))}\n    </div>\n  );\n};\n\nSkills.displayName = 'Skills';\n\nexport default Skills;\n","// @flow\nimport React from 'react';\nimport type { JobT } from './constants';\nimport './Experience.scss';\n\ntype Props = JobT;\n\nconst Job = ({\n  start_date,\n  end_date,\n  position,\n  company,\n  location,\n  description,\n  achievements,\n  tech_stack,\n  print_margin\n}: Props) => {\n  return (\n    <div className={`job${print_margin ? ' print-margin' : ''}`}>\n      <div className=\"dates\">\n        {start_date} - {end_date ? end_date : 'Present'}\n      </div>\n      <div className=\"details\">\n        <h4>{position}</h4>\n        <h5>\n          {company} - {location}\n        </h5>\n\n        {description && <p className=\"description\">{description}</p>}\n        {achievements && achievements.length > 0 && (\n          <ul className=\"achievements\">\n            {achievements.map((achievement, index) => (\n              <li key={index}>{achievement}</li>\n            ))}\n          </ul>\n        )}\n        {tech_stack && (\n          <p className=\"tech-stack\">\n            <span className=\"bold\">Tech stack: </span>\n            {tech_stack}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nJob.displayName = 'Job';\n\nexport default Job;\n","export const jobs = [\n  {\n    start_date: 'September 2019',\n    end_date: null,\n    position: 'Engineering Manager',\n    company: 'ACV Auctions',\n    location: 'Toronto, CA',\n    description: `ACV Auctions provides a mobile app and web platform that allows car dealers to quickly buy and sell wholesale vehicles through live auctions.`,\n    achievements: null\n  },\n  {\n    start_date: 'April 2019',\n    end_date: 'September 2019',\n    position: 'Venture Technology Lead',\n    company: 'RBC Ventures',\n    location: 'Toronto, CA',\n    description: `RBC is going beyond banking to create solutions that touch every Canadian.`,\n    achievements: [\n      'Migrated database from MongoDB to PostgreSQL.',\n      'Improved team culture and overall happiness.'\n    ]\n  },\n  {\n    start_date: 'July 2018',\n    end_date: 'April 2019',\n    position: 'Senior JavaScript Engineer',\n    company: 'RBC Ventures',\n    location: 'Toronto, CA',\n    description: null,\n    achievements: [\n      'Led a complete refactor of the front-end.',\n      'Redesigned the database schema.',\n      'Took the test coverage from 13% to 80%.'\n    ]\n  },\n  {\n    start_date: 'January 2018',\n    end_date: 'July 2018',\n    position: 'Senior Full-Stack Engineer',\n    company: 'LifeWorks',\n    location: 'Toronto, CA',\n    description: `LifeWorks is a global employee engagement\n      platform serving 50,000 companies with over 15 million users.`,\n    achievements: [\n      'Implemented a dashboard using clojure.',\n      'Wrote lots of unit tests.'\n    ],\n    print_margin: true\n  },\n  {\n    start_date: 'July 2016',\n    end_date: 'December 2017',\n    position: 'Lead Front-End Engineer',\n    company: 'LifeWorks',\n    location: 'London, UK',\n    description: null,\n    achievements: [\n      'Hired, trained and mentored the front-end team.',\n      'Improved the platform performances.'\n    ]\n  },\n  {\n    start_date: 'July 2015',\n    end_date: 'July 2016',\n    position: 'Front-End Engineer',\n    company: 'LifeWorks',\n    location: 'London, UK',\n    description: null,\n    achievements: [\n      'Built new features in React.',\n      'Refactored features from AngularJS to React.'\n    ]\n  },\n  {\n    start_date: 'May 2012',\n    end_date: 'July 2015',\n    position: 'Senior Web Developer',\n    company: 'Vanilla Active',\n    location: 'London, UK',\n    description: `Vanilla Active is a digital agency offering services to\n      agencies and brands.`,\n    achievements: ['Built more than a 100 micro websites.']\n  },\n  {\n    start_date: 'December 2008',\n    end_date: 'June 2011',\n    position: 'Web Developer',\n    company: 'Jules Bordet Institute',\n    location: 'Brussels, BE',\n    description: `The BrEAST data centre is a clinical trials unit \n      conducting international studies in breast cancer research.`,\n    achievements: [\n      'Worked on a website used by doctors worldwide.',\n      'Learned about validation of computer systems.'\n    ]\n  },\n  {\n    start_date: 'March 2019',\n    end_date: null,\n    position: 'Lead Instructor',\n    company: 'Bridge School',\n    location: 'Toronto, CA',\n    description: `Free software development education \n      for women, agender, and non-binary professionals in technology.`,\n    tech_stack: null,\n    volunteer: true\n  }\n];\n\nexport type JobT = {\n  start_date: string,\n  end_date: ?string,\n  position: string,\n  company: string,\n  location: string,\n  description: ?string,\n  achievements: Array<string>,\n  print_margin?: boolean,\n  volunteer?: boolean\n};\n","// @flow\nimport React from 'react';\nimport Job from './Job';\nimport { jobs } from './constants';\nimport type { JobT } from './constants';\nimport './Experience.scss';\n\nconst Experience = () => {\n  return (\n    <div className=\"box experience\">\n      <h3>Experience</h3>\n      {jobs\n        .filter(job => !job.volunteer)\n        .map((job: JobT, index: number) => (\n          <Job {...job} key={index} />\n        ))}\n    </div>\n  );\n};\n\nExperience.displayName = 'Experience';\n\nexport default Experience;\n","export const education = [\n  {\n    graduation_year: 2008,\n    school: 'Paul Lambin Institute',\n    location: 'Brussels, Belgium',\n    description: `BSc Computer Science (web services, infographic\n      and artificial intelligence)`\n  },\n  {\n    graduation_year: 2005,\n    school: 'High School \"Lycée de Berlaymont\"',\n    location: 'Waterloo, Belgium',\n    description: `Sciences and mathematics`\n  }\n];\n\nexport type SchoolT = {\n  graduation_year: number,\n  school: string,\n  location: string,\n  description: string\n};\n","// @flow\nimport React from 'react';\nimport type { SchoolT } from './constants';\nimport './Education.scss';\n\ntype Props = SchoolT;\n\nconst School = ({ graduation_year, school, location, description }: Props) => {\n  return (\n    <div className=\"school\">\n      <div className=\"year\">{graduation_year}</div>\n      <div className=\"details\">\n        <h4>{school}</h4>\n        <h5>{location}</h5>\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n};\n\nSchool.displayName = 'School';\n\nexport default School;\n","// @flow\nimport React from 'react';\nimport { education } from './constants';\nimport type { SchoolT } from './constants';\nimport School from './School';\nimport './Education.scss';\n\nconst Education = () => {\n  return (\n    <div className=\"box education\">\n      <h3>Education</h3>\n      {education.map((school: SchoolT, index: number) => (\n        <School {...school} key={index} />\n      ))}\n    </div>\n  );\n};\n\nEducation.displayName = 'Education';\n\nexport default Education;\n","// @flow\nimport React from 'react';\nimport Job from './Job';\nimport { jobs } from './constants';\nimport type { JobT } from './constants';\nimport './Experience.scss';\n\nconst Volunteering = () => {\n  return (\n    <div className=\"box volunteering\">\n      <h3>Volunteering</h3>\n      {jobs\n        .filter(job => job.volunteer)\n        .map((job: JobT, index: number) => (\n          <Job {...job} key={index} />\n        ))}\n    </div>\n  );\n};\n\nVolunteering.displayName = 'Volunteering';\n\nexport default Volunteering;\n","export const languages = [\n  {\n    type: 'french',\n    label: 'French',\n    level: 'Native'\n  },\n  {\n    type: 'english',\n    label: 'English',\n    level: 'Fluent'\n  },\n  {\n    type: 'dutch',\n    label: 'Dutch',\n    level: 'Basic'\n  }\n];\n\nexport type LanguageT = {\n  type: string,\n  label: string,\n  level: string\n};\n","// @flow\nimport React from 'react';\nimport './Languages.scss';\n\ntype Props = {\n  label: string,\n  level: string\n};\n\nconst Language = ({ label, level }: Props) => {\n  return (\n    <li>\n      <span className=\"bold\">{label}</span>: {level}\n    </li>\n  );\n};\n\nLanguage.displayName = 'Language';\n\nexport default Language;\n","// @flow\nimport React from 'react';\nimport { languages } from './constants';\nimport type { LanguageT } from './constants';\nimport Language from './Language';\nimport './Languages.scss';\n\nconst Languages = () => {\n  return (\n    <div className=\"box languages\">\n      <h3>Languages</h3>\n      <ul>\n        {languages.map((language: LanguageT) => (\n          <Language {...language} key={language.type} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nLanguages.displayName = 'Languages';\n\nexport default Languages;\n","export const interests = [\n  {\n    type: 'sports',\n    label: 'Sports',\n    description: 'Outdoor sports, squash, badminton'\n  },\n  {\n    type: 'Music',\n    label: 'Music',\n    description: 'Piano, Guitar'\n  },\n  {\n    type: 'other',\n    label: 'Other',\n    description: 'Travelling'\n  }\n];\n\nexport type InterestT = {\n  type: string,\n  label: string,\n  description: string\n};\n","// @flow\nimport React from 'react';\nimport './Interests.scss';\n\ntype Props = {\n  label: string,\n  description: string\n};\n\nconst Interest = ({ label, description }: Props) => {\n  return (\n    <li>\n      <span className=\"bold\">{label}</span>: {description}\n    </li>\n  );\n};\n\nInterest.displayName = 'Interest';\n\nexport default Interest;\n","// @flow\nimport React from 'react';\nimport { interests } from './constants';\nimport type { InterestT } from './constants';\nimport Interest from './Interest';\nimport './Interests.scss';\n\nconst Interests = () => {\n  return (\n    <div className=\"box interests\">\n      <h3>Personal Interests</h3>\n      <ul>\n        {interests.map((interest: InterestT) => (\n          <Interest {...interest} key={interest.type} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nInterests.displayName = 'Interests';\n\nexport default Interests;\n","// @flow\nimport React from 'react';\nimport './References.scss';\n\nconst References = () => {\n  return (\n    <div className=\"box references\">\n      <h3>References</h3>\n      <p>References available upon request.</p>\n    </div>\n  );\n};\n\nReferences.displayName = 'References';\n\nexport default References;\n","// @flow\nimport React from 'react';\nimport './Divider.scss';\n\nconst Divider = () => {\n  return <div className=\"divider\" />;\n};\n\nDivider.displayName = 'Divider';\n\nexport default Divider;\n","export const generateHTMLDots = (numberOfDots: number) => {\n  let dots = '';\n  for (let i = 0; i < numberOfDots; i++) {\n    dots +=\n      '<div><svg height=\"8\" width=\"8\"><circle cx=\"4\" cy=\"4\" r=\"2\" class=\"dot\"/></svg></div>';\n  }\n\n  return { __html: dots };\n};\n","// @flow\nimport React from 'react';\nimport { generateHTMLDots } from './helpers';\nimport './PrintDivider.scss';\n\nconst DOTS_FIRST_PAGE = 90;\nconst DOTS_SECOND_PAGE = 100;\n\nconst PrintDivider = () => {\n  return (\n    <div className=\"print-divider\">\n      <div\n        className=\"print-divider-page-1\"\n        dangerouslySetInnerHTML={generateHTMLDots(DOTS_FIRST_PAGE)}\n      />\n      <svg height=\"27\" width=\"20\">\n        <polygon points=\"0,0 20,0 10,13\" className=\"triangle-down\" />\n      </svg>\n      <div className=\"continued\">Continued</div>\n      <div className=\"name-repeat\">\n        <span className=\"secondary\">Cathleen</span> Ghenne\n      </div>\n      {/* <div className=\"title-repeat\">Experience</div> */}\n      <svg height=\"34\" width=\"20\" className=\"triangle\">\n        <polygon points=\"10,21 20,34 0,34\" className=\"triangle-up\" />\n      </svg>\n      <div\n        className=\"print-divider-page-2\"\n        dangerouslySetInnerHTML={generateHTMLDots(DOTS_SECOND_PAGE)}\n      />\n    </div>\n  );\n};\n\nPrintDivider.displayName = 'PrintDivider';\n\nexport default PrintDivider;\n","// @flow\nimport React, { useState } from 'react';\nimport Header from './components/Header/Header';\nimport Hello from './components/Hello/Hello';\nimport SayHello from './components/SayHello/SayHello';\nimport Skills from './components/Skills/Skills';\nimport Experience from './components/Experience/Experience';\nimport Education from './components/Education/Education';\nimport Volunteering from './components/Experience/Volunteering';\nimport Languages from './components/Languages/Languages';\nimport Interests from './components/Interests/Interests';\nimport References from './components/References/References';\nimport Divider from './components/Divider/Divider';\nimport PrintDivider from './components/PrintDivider/PrintDivider';\nimport './styles/_reset.scss';\nimport './App.scss';\n\nconst App = () => {\n  const [isPrintMode, setIsPrintMode] = useState(false);\n\n  // this only works in Chrome\n  // but I'm the only one using this features so I've decided it was enough support\n  window.onbeforeprint = () => setIsPrintMode(true);\n  window.onafterprint = () => setIsPrintMode(false);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Hello />\n      <SayHello showPrivateDetails={isPrintMode} />\n      <Experience />\n      <Skills />\n      <Education />\n      <Volunteering />\n      <Languages />\n      <Interests />\n      <References />\n      <Divider />\n      {isPrintMode && <PrintDivider />}\n    </div>\n  );\n};\n\nApp.displayName = 'App';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Open Sans', 'Roboto']\n  }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nconsole.info(\n  'Thanks Alissa (http://www.alissa-schlecht.com/) for allowing me to steal your design!'\n);\n"],"sourceRoot":""}